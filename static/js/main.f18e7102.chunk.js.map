{"version":3,"sources":["Context/TaskListContext.js","Components/Todo/Todo.js","Components/TodoList/TodoList.js","Components/TodoForm/TodoForm.js","Components/Heading/heading.js","App.js","reportWebVitals.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Todo","useContext","className","onClick","TodoList","length","TodoForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Heading","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f18e7102.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport {v4 as uuid } from 'uuid';\n\nexport const TaskListContext = createContext()\n\nconst TaskListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || []\n\n  const [tasks, setTasks] = useState(initialState)\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }, [tasks])\n\n  const [editItem, setEditItem] = useState(null)\n\n  // Add tasks\n  const addTask = title => {\n    setTasks([...tasks, { title, id: uuid() }])\n  }\n\n  // Remove tasks\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  // Clear tasks\n  const clearList = () => {\n    setTasks([])\n  }\n\n  // Find task\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id)\n\n    setEditItem(item)\n  }\n\n  // Edit task\n  const editTask = (title, id) => {\n    const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\n\n    console.log(newTasks)\n\n    setTasks(newTasks)\n    setEditItem(null)\n  }\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        clearList,\n        findItem,\n        editTask,\n        editItem\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  )\n}\n\nexport default TaskListContextProvider","import React, { useContext } from 'react'\nimport { TaskListContext } from '../../Context/TaskListContext'\n\nexport const Todo = ({ task }) => {\n    const { removeTask, findItem } = useContext(TaskListContext)\n    return (\n        <li className=\"list-item\">\n            <span>{task.title} </span>\n            <div>\n                <button\n                    className=\"btn-delete task-btn\"\n                    onClick={() => removeTask(task.id)}\n                >\n                    <i className=\"fas fa-times\"></i>\n                </button>{' '}\n                <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\n                    <i className=\"fas fa-pen\"></i>\n                </button>\n            </div>\n        </li>\n    )\n}\n","import React, { useContext } from \"react\";\nimport { TaskListContext } from \"../../Context/TaskListContext\";\nimport { Todo } from \"../Todo/Todo\";\n\nexport const TodoList = () => {\n\n    const { tasks } = useContext(TaskListContext);\n\n    return (\n        <div>\n            {tasks.length ? (\n                <ul className=\"list\">\n                    {tasks.map(task => {\n                        return <Todo task={task} key={task.id} />;\n                    })}\n                </ul>\n            ) : (\n                    <div className=\"no-tasks\">No Tasks</div>\n                )}\n        </div>\n    );\n};\n","import React, { useState, useContext, useEffect } from 'react'\nimport { TaskListContext } from '../../Context/TaskListContext'\n\nexport const TodoForm = () => {\n\n    const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\n    const [title, setTitle] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!editItem) {\n            addTask(title)\n            setTitle('')\n        } else {\n            editTask(title, editItem.id)\n        }\n    }\n\n    const handleChange = e => {\n        setTitle(e.target.value)\n    }\n\n    useEffect(() => {\n        if (editItem) {\n            setTitle(editItem.title)\n            console.log(editItem)\n        } else {\n            setTitle('')\n        }\n    }, [editItem])\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form\">\n            <input\n                type=\"text\"\n                placeholder=\"Add Task...\"\n                value={title}\n                onChange={handleChange}\n                required\n                className=\"task-input\"\n            />\n            <div className=\"buttons\">\n                <button type=\"submit\" className=\"btn add-task-btn\">\n                    {editItem ? 'Edit Task' : 'Add Task'}\n                </button>\n                <button className=\"btn clear-btn\" onClick={clearList}>\n                    Clear\n        </button>\n            </div>\n        </form>\n    )\n}","import React from 'react'\n\nexport const Heading = () => {\n    return (\n        <div className='header'>\n            <h1>Basic CRUD </h1>\n        </div>\n    )\n}\n","import React from \"react\";\nimport TaskListContextProvider from './Context/TaskListContext';\nimport { TodoList } from \"./Components/TodoList/TodoList\";\nimport { TodoForm } from \"./Components/TodoForm/TodoForm\";\n\nimport '../src/App.css';\nimport { Heading } from \"./Components/Heading/heading\";\n\n\nconst App = () => {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Heading />\n          <div className=\"main\">\n            <TodoForm />\n            <TodoList />\n          </div>\n        </div>\n      </div>\n    </TaskListContextProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}